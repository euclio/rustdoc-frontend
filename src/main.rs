extern crate rustdoc_frontend as frontend;

extern crate clap;
extern crate handlebars;
extern crate jsonapi;
extern crate pretty_env_logger;

use std::fs::File;
use std::io::prelude::*;
use std::env;

use clap::{Arg, App};
use jsonapi::api::JsonApiDocument;

fn main() {
    pretty_env_logger::init().unwrap();

    let matches = App::new("rustdoc-frontend")
        .arg(
            Arg::with_name("data")
                .help("data generated by the rustdoc backend")
                .required(true),
        )
        .get_matches();

    let data_file = matches.value_of("data").unwrap();

    let mut file = File::open(data_file).unwrap();
    let mut json = String::new();
    file.read_to_string(&mut json).unwrap();

    let document = JsonApiDocument::from_str(&json).unwrap();
    frontend::render_docs(&document, env::current_dir().unwrap().join("target")).unwrap();
}
